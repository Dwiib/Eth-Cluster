apiVersion: apps/v1
kind: Deployment
metadata:
  name: ipfs-go
  labels:
    app: ipfs-go
  namespace: ens-bridge
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ipfs-go
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ipfs-go
    spec:
      containers:
        - name: ipfs-go
          image: ipfs/go-ipfs:v0.8.0
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            allowPrivilegeEscalation: false
          resources:
            requests:
              memory: "128Mi"
              cpu: "500m"
            limits:
              memory: "256Mi"
              cpu: "800m"
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 4001
              name: "swarm"
              protocol: "TCP"
            - containerPort: 5001
              name: "api"
              protocol: "TCP"
          volumeMounts:
            - mountPath: /data/ipfs
              name: ipfs-data
          env:
            - name: IPFS_PROFILE
              value: "server"
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              httpHeaders:
                - name: Host
                  value: penguinparty.eth
            initialDelaySeconds: 10
            periodSeconds: 30
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 10.96.10.10
        searches:
          - eth
          - eth.link
          - crypto
      volumes:
        - name: ipfs-data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ipfs-go
  namespace: ens-bridge
spec:
  # Hardcoded clusterIP for coredns `ipfsgatewaya` setting
  clusterIP: 10.96.10.11
  selector:
    app: ipfs-go
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080